
#set(CMAKE_LIBRARY_PATH ${CMAKE_LIBRARY_PATH} /home/niki/opt/lib)
#set(CMAKE_INCLUDE_PATH ${CMAKE_INCLUDE_PATH} /home/niki/opt/include)
#SET(CMAKE_CXX_FLAGS  "${CMAKE_CXX_FLAGS} -I/home/niki/opt/include" )
#SET(CMAKE_EXE_LINKER_FLAGS  "${CMAKE_EXE_LINKER_FLAGS} -L/home/niki/opt/lib" )
#find_package(GTest REQUIRED)
#include_directories(${GTEST_INCLUDE_DIR})

include_directories (${integer_partition_SOURCE_DIR}/src) 
link_directories (${integer_partition_BINARY_DIR}/src) 
add_executable  (intervaltest tests.cpp basic_tests.cpp partition_tests.cpp bin2.cpp) #newpartition.cpp parallelpartition.cpp)
target_link_libraries  (intervaltest ${GTEST_LIBRARY})
target_link_libraries  (intervaltest ${GFLAGS_LIBRARY})
target_link_libraries  (intervaltest ${GLOG_LIBRARY})
target_link_libraries (intervaltest integer_partition)
target_link_libraries (intervaltest celero)
target_link_libraries (intervaltest pthread)
enable_testing()
add_test(NAME intervaltest COMMAND intervaltest)

#add_executable  (benchmark benchmark.cpp celero.cpp)
#target_link_libraries (benchmark ${GFLAGS_LIBRARY})
#target_link_libraries (benchmark ${GLOG_LIBRARY})
#target_link_libraries (benchmark integer_partition)
#target_link_libraries (benchmark celero)
#target_link_libraries (benchmark pthread)

if( CODE_COVERAGE )                                                                                                                                            
SETUP_TARGET_FOR_COVERAGE(test_cov intervaltest coverage)
endif()
